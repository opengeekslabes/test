{"ast":null,"code":"import { call, put } from 'redux-saga/effects';\nimport { loginSuccess, loginFailure } from '../../actions/autorisation/Login';\nimport { types } from '../../actions/autorisation/Types';\nimport { typesUser } from '../../actions/user/Username';\nimport rsf from '../../../rsf/rsf';\nimport firebase from 'firebase';\nimport { database } from '../../../rsf/rsf';\nexport function* createPostSaga({\n  email,\n  postHeadline,\n  postText,\n  postTime\n}) {\n  //  yield put({type: types.LOGIN.REQUEST})\n  try {\n    console.log('IM TRYING', email);\n    const path = email.split('').filter(item => item !== '.').join('');\n    const months = [January, February, March, April, May, June, July, August, September, October, November, December];\n    const postDate = `${months[getMonth()]} ${getDate()}`;\n    firebase.database().ref(`users/${path}`).child('posts').push({\n      postDate: postDate,\n      postHeadline: postHeadline,\n      postText: postText,\n      postTime: postTime\n    });\n  } //    yield put(loginSuccess(user));\n  catch (error) {\n    console.log('NONONO'); //    yield put(loginFailure(error));\n  }\n} //      postDate: postDate,\n//      postHeadline: postHeadline,\n//      postText: postText,\n//      postTime: postTime","map":{"version":3,"sources":["C:/Users/Daniil/ТЕСТОВОЕ/test_app/src/redux/sagas/posts/posts.js"],"names":["call","put","loginSuccess","loginFailure","types","typesUser","rsf","firebase","database","createPostSaga","email","postHeadline","postText","postTime","console","log","path","split","filter","item","join","months","January","February","March","April","May","June","July","August","September","October","November","December","postDate","getMonth","getDate","ref","child","push","error"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,kCAA3C;AACA,SAASC,KAAT,QAAsB,kCAAtB;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAO,UAAUC,cAAV,CAAyB;AAACC,EAAAA,KAAD;AAAQC,EAAAA,YAAR;AAAsBC,EAAAA,QAAtB;AAAgCC,EAAAA;AAAhC,CAAzB,EAAoE;AAC3E;AACE,MAAI;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBL,KAAzB;AACE,UAAMM,IAAI,GAAGN,KAAK,CAACO,KAAN,CAAY,EAAZ,EAAgBC,MAAhB,CAAuBC,IAAI,IAAIA,IAAI,KAAK,GAAxC,EAA6CC,IAA7C,CAAkD,EAAlD,CAAb;AACA,UAAMC,MAAM,GAAG,CAACC,OAAD,EAAUC,QAAV,EAAoBC,KAApB,EAA2BC,KAA3B,EAAkCC,GAAlC,EAAuCC,IAAvC,EAA6CC,IAA7C,EAAmDC,MAAnD,EAA2DC,SAA3D,EAAsEC,OAAtE,EAA+EC,QAA/E,EAAyFC,QAAzF,CAAf;AACA,UAAMC,QAAQ,GAAI,GAAEb,MAAM,CAACc,QAAQ,EAAT,CAAa,IAAGC,OAAO,EAAG,EAApD;AAEA7B,IAAAA,QAAQ,CAACC,QAAT,GAAoB6B,GAApB,CAAyB,SAAQrB,IAAK,EAAtC,EAAyCsB,KAAzC,CAA+C,OAA/C,EAAwDC,IAAxD,CAA6D;AAC3DL,MAAAA,QAAQ,EAAEA,QADiD;AAE3DvB,MAAAA,YAAY,EAAEA,YAF6C;AAG3DC,MAAAA,QAAQ,EAAEA,QAHiD;AAI3DC,MAAAA,QAAQ,EAAEA;AAJiD,KAA7D;AAMD,GAZH,CAaF;AAEE,SAAM2B,KAAN,EAAa;AACX1B,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EADW,CAEf;AACG;AACF,C,CAED;AACA;AACA;AACA","sourcesContent":["import { call, put } from 'redux-saga/effects'\nimport { loginSuccess, loginFailure } from '../../actions/autorisation/Login'\nimport { types } from '../../actions/autorisation/Types'\nimport { typesUser } from '../../actions/user/Username'\nimport rsf from '../../../rsf/rsf'\nimport firebase from 'firebase'\nimport { database } from '../../../rsf/rsf'\n\nexport function* createPostSaga({email, postHeadline, postText, postTime}) {\n//  yield put({type: types.LOGIN.REQUEST})\n  try {\n    console.log('IM TRYING', email)\n      const path = email.split('').filter(item => item !== '.').join('');\n      const months = [January, February, March, April, May, June, July, August, September, October, November, December]   \n      const postDate = `${months[getMonth()]} ${getDate()}`\n      \n      firebase.database().ref(`users/${path}`).child('posts').push({\n        postDate: postDate,\n        postHeadline: postHeadline,\n        postText: postText,\n        postTime: postTime\n      });\n    }\n//    yield put(loginSuccess(user));\n  \n  catch(error) {\n    console.log('NONONO')\n//    yield put(loginFailure(error));\n  }\n}\n\n//      postDate: postDate,\n//      postHeadline: postHeadline,\n//      postText: postText,\n//      postTime: postTime"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { call, put } from 'redux-saga/effects';\nimport { loginSuccess, loginFailure } from '../../actions/autorisation/Login';\nimport { types } from '../../actions/autorisation/Types';\nimport { typesUser } from '../../actions/user/Username';\nimport rsf from '../../../rsf/rsf';\nexport function* loginSaga({\n  email,\n  password\n}) {\n  yield put({\n    type: types.LOGIN.REQUEST\n  });\n\n  try {\n    const user = yield call(rsf.auth.signInWithEmailAndPassword, email, password);\n    yield put(loginSuccess(user));\n  } catch (error) {\n    yield put(loginFailure(error));\n  }\n}","map":{"version":3,"sources":["C:/Users/Daniil/ТЕСТОВОЕ/test_app/src/redux/sagas/autorisation/Login.js"],"names":["call","put","loginSuccess","loginFailure","types","typesUser","rsf","loginSaga","email","password","type","LOGIN","REQUEST","user","auth","signInWithEmailAndPassword","error"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,kCAA3C;AACA,SAASC,KAAT,QAAsB,kCAAtB;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AAEA,OAAO,UAAUC,SAAV,CAAoB;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAApB,EAAuC;AAC5C,QAAMR,GAAG,CAAC;AAACS,IAAAA,IAAI,EAAEN,KAAK,CAACO,KAAN,CAAYC;AAAnB,GAAD,CAAT;;AACA,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMb,IAAI,CAACM,GAAG,CAACQ,IAAJ,CAASC,0BAAV,EAAsCP,KAAtC,EAA6CC,QAA7C,CAAvB;AACA,UAAMR,GAAG,CAACC,YAAY,CAACW,IAAD,CAAb,CAAT;AACD,GAHD,CAIA,OAAMG,KAAN,EAAa;AACX,UAAMf,GAAG,CAACE,YAAY,CAACa,KAAD,CAAb,CAAT;AACD;AACF","sourcesContent":["import { call, put } from 'redux-saga/effects'\nimport { loginSuccess, loginFailure } from '../../actions/autorisation/Login'\nimport { types } from '../../actions/autorisation/Types'\nimport { typesUser } from '../../actions/user/Username'\nimport rsf from '../../../rsf/rsf'\n\nexport function* loginSaga({email, password}) {\n  yield put({type: types.LOGIN.REQUEST})\n  try {\n    const user = yield call(rsf.auth.signInWithEmailAndPassword, email, password);\n    yield put(loginSuccess(user));\n  }\n  catch(error) {\n    yield put(loginFailure(error));\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
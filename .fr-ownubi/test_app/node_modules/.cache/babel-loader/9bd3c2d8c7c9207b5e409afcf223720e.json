{"ast":null,"code":"import { call, put } from 'redux-saga/effects';\nimport { loginSuccess, loginFailure } from '../../actions/autorisation/Login';\nimport { types } from '../../actions/autorisation/Types';\nimport { typesUser } from '../../actions/user/Username';\nimport rsf from '../../../rsf/rsf';\nimport firebase from 'firebase';\nimport { database } from '../../../rsf/rsf';\nexport function* createPostSaga({\n  email,\n  postDate,\n  postHeadline,\n  postText,\n  postTime\n}) {\n  //  yield put({type: types.LOGIN.REQUEST})\n  try {\n    console.log('IM TRYING');\n    database().ref(`users/`).set({\n      postDate: postDate,\n      postHeadline: postHeadline,\n      postText: postText,\n      postTime: postTime\n    }); //    yield put(loginSuccess(user));\n  } catch (error) {\n    console.log('NONONO'); //    yield put(loginFailure(error));\n  }\n}","map":{"version":3,"sources":["C:/Users/Daniil/ТЕСТОВОЕ/test_app/src/redux/sagas/posts/posts.js"],"names":["call","put","loginSuccess","loginFailure","types","typesUser","rsf","firebase","database","createPostSaga","email","postDate","postHeadline","postText","postTime","console","log","ref","set","error"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,kCAA3C;AACA,SAASC,KAAT,QAAsB,kCAAtB;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAO,UAAUC,cAAV,CAAyB;AAACC,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA,YAAlB;AAAgCC,EAAAA,QAAhC;AAA0CC,EAAAA;AAA1C,CAAzB,EAA8E;AACrF;AACE,MAAI;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAR,IAAAA,QAAQ,GAAGS,GAAX,CAAgB,QAAhB,EAAyBC,GAAzB,CAA6B;AAC3BP,MAAAA,QAAQ,EAAEA,QADiB;AAE3BC,MAAAA,YAAY,EAAEA,YAFa;AAG3BC,MAAAA,QAAQ,EAAEA,QAHiB;AAI3BC,MAAAA,QAAQ,EAAEA;AAJiB,KAA7B,EAFE,CAQN;AACG,GATD,CAUA,OAAMK,KAAN,EAAa;AACXJ,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EADW,CAEf;AACG;AACF","sourcesContent":["import { call, put } from 'redux-saga/effects'\nimport { loginSuccess, loginFailure } from '../../actions/autorisation/Login'\nimport { types } from '../../actions/autorisation/Types'\nimport { typesUser } from '../../actions/user/Username'\nimport rsf from '../../../rsf/rsf'\nimport firebase from 'firebase'\nimport { database } from '../../../rsf/rsf'\n\nexport function* createPostSaga({email, postDate, postHeadline, postText, postTime}) {\n//  yield put({type: types.LOGIN.REQUEST})\n  try {\n    console.log('IM TRYING')\n    database().ref(`users/`).set({\n      postDate: postDate,\n      postHeadline: postHeadline,\n      postText: postText,\n      postTime: postTime\n    });\n//    yield put(loginSuccess(user));\n  }\n  catch(error) {\n    console.log('NONONO')\n//    yield put(loginFailure(error));\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}
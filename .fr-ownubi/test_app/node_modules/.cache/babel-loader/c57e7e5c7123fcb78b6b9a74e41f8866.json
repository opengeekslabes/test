{"ast":null,"code":"import { typesDragAndDrop } from '../../actions/draganddrop/DragAndDrop';\nconst initialState = {\n  dropDepth: 0,\n  inDropZone: false,\n  fileList: []\n};\nexport function DragAndDropReducer(state = initialState, action) {\n  switch (action.type) {\n    case typesDragAndDrop.DROP.DROPDEPTH:\n      return { ...state,\n        dropDepth: action.data\n      };\n\n    case typesDragAndDrop.DROP.INDROPZONE:\n      {\n        return { ...state,\n          inDropZone: action.data\n        };\n      }\n\n    case typesDragAndDrop.DROP.FILETOLIST:\n      return { ...state,\n        fileList: state.fileList.concat(action.data)\n      };\n\n    default:\n      return state;\n  }\n}\n;","map":{"version":3,"sources":["C:/Users/Daniil/ТЕСТОВОЕ/test_app/src/redux/reducers/draganddrop/DragAndDrop.js"],"names":["typesDragAndDrop","initialState","dropDepth","inDropZone","fileList","DragAndDropReducer","state","action","type","DROP","DROPDEPTH","data","INDROPZONE","FILETOLIST","concat"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,uCAAjC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,CADQ;AAEnBC,EAAAA,UAAU,EAAE,KAFO;AAGnBC,EAAAA,QAAQ,EAAE;AAHS,CAArB;AAMA,OAAO,SAASC,kBAAT,CAA4BC,KAAK,GAAGL,YAApC,EAAkDM,MAAlD,EAA0D;AAC/D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,gBAAgB,CAACS,IAAjB,CAAsBC,SAA3B;AACE,aAAO,EACL,GAAGJ,KADE;AAELJ,QAAAA,SAAS,EAAEK,MAAM,CAACI;AAFb,OAAP;;AAIF,SAAKX,gBAAgB,CAACS,IAAjB,CAAsBG,UAA3B;AAAuC;AAErC,eAAO,EACL,GAAGN,KADE;AAELH,UAAAA,UAAU,EAAEI,MAAM,CAACI;AAFd,SAAP;AAID;;AACD,SAAKX,gBAAgB,CAACS,IAAjB,CAAsBI,UAA3B;AACE,aAAO,EACL,GAAGP,KADE;AAELF,QAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeU,MAAf,CAAsBP,MAAM,CAACI,IAA7B;AAFL,OAAP;;AAIF;AACE,aAAOL,KAAP;AAnBJ;AAqBD;AAAA","sourcesContent":["import { typesDragAndDrop } from '../../actions/draganddrop/DragAndDrop'\n\nconst initialState = {\n  dropDepth: 0,\n  inDropZone: false,\n  fileList: []\n}\n\nexport function DragAndDropReducer(state = initialState, action) {\n  switch (action.type) {\n    case typesDragAndDrop.DROP.DROPDEPTH:\n      return {\n        ...state,\n        dropDepth: action.data\n      }\n    case typesDragAndDrop.DROP.INDROPZONE: {\n\n      return {\n        ...state,\n        inDropZone: action.data\n      };\n    }\n    case typesDragAndDrop.DROP.FILETOLIST:\n      return {\n        ...state,\n        fileList: state.fileList.concat(action.data)\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { call, put } from 'redux-saga/effects';\nimport { loginSuccess, loginFailure } from '../../actions/autorisation/Login';\nimport { types } from '../../actions/autorisation/Types';\nimport { typesUser } from '../../actions/user/Username';\nimport rsf from '../../../rsf/rsf';\nexport function* createPostSaga({\n  postDate,\n  postHeadline,\n  postText,\n  postTime\n}) {\n  //  yield put({type: types.LOGIN.REQUEST})\n  try {\n    firebase.database().ref('users/' + userId).set({\n      postDate: postDate,\n      postHeadline: postHeadline,\n      postText: postText,\n      postTime: postTime\n    }); //    yield put(loginSuccess(user));\n  } catch (error) {\n    yield put(loginFailure(error));\n  }\n}","map":{"version":3,"sources":["C:/Users/Daniil/ТЕСТОВОЕ/test_app/src/redux/sagas/posts/posts.js"],"names":["call","put","loginSuccess","loginFailure","types","typesUser","rsf","createPostSaga","postDate","postHeadline","postText","postTime","firebase","database","ref","userId","set","error"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,kCAA3C;AACA,SAASC,KAAT,QAAsB,kCAAtB;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AAEA,OAAO,UAAUC,cAAV,CAAyB;AAACC,EAAAA,QAAD;AAAWC,EAAAA,YAAX;AAAyBC,EAAAA,QAAzB;AAAmCC,EAAAA;AAAnC,CAAzB,EAAuE;AAC9E;AACE,MAAI;AACFC,IAAAA,QAAQ,CAACC,QAAT,GAAoBC,GAApB,CAAwB,WAAWC,MAAnC,EAA2CC,GAA3C,CAA+C;AAC7CR,MAAAA,QAAQ,EAAEA,QADmC;AAE7CC,MAAAA,YAAY,EAAEA,YAF+B;AAG7CC,MAAAA,QAAQ,EAAEA,QAHmC;AAI7CC,MAAAA,QAAQ,EAAEA;AAJmC,KAA/C,EADE,CAON;AACG,GARD,CASA,OAAMM,KAAN,EAAa;AACX,UAAMhB,GAAG,CAACE,YAAY,CAACc,KAAD,CAAb,CAAT;AACD;AACF","sourcesContent":["import { call, put } from 'redux-saga/effects'\nimport { loginSuccess, loginFailure } from '../../actions/autorisation/Login'\nimport { types } from '../../actions/autorisation/Types'\nimport { typesUser } from '../../actions/user/Username'\nimport rsf from '../../../rsf/rsf'\n\nexport function* createPostSaga({postDate, postHeadline, postText, postTime}) {\n//  yield put({type: types.LOGIN.REQUEST})\n  try {\n    firebase.database().ref('users/' + userId).set({\n      postDate: postDate,\n      postHeadline: postHeadline,\n      postText: postText,\n      postTime: postTime\n    });\n//    yield put(loginSuccess(user));\n  }\n  catch(error) {\n    yield put(loginFailure(error));\n  }\n}\n\n"]},"metadata":{},"sourceType":"module"}
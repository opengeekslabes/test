{"ast":null,"code":"import firebase from 'firebase';\nimport { call, put } from 'redux-saga/effects';\nimport { signupSuccess, signupFailure } from '../../actions/autorisation/SignUp';\nimport rsf from '../../../rsf/rsf';\nimport { userName } from '../../actions/user/Username';\nexport function* createUserSaga({\n  email,\n  password,\n  name\n}) {\n  try {\n    const user = yield call(rsf.auth.createUserWithEmailAndPassword, email, password);\n    userName(email, name);\n    const currentUser = firebase.auth().currentUser;\n    currentUser.updateProfile({\n      displayName: name\n    }).then(function () {}).catch(function (error) {});\n  } catch (error) {\n    yield put(signupFailure(error));\n  }\n}","map":{"version":3,"sources":["C:/Users/Daniil/ТЕСТОВОЕ/test_app/src/redux/sagas/autorisation/SignUp.js"],"names":["firebase","call","put","signupSuccess","signupFailure","rsf","userName","createUserSaga","email","password","name","user","auth","createUserWithEmailAndPassword","currentUser","updateProfile","displayName","then","catch","error"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,mCAA7C;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,SAASC,QAAT,QAAyB,6BAAzB;AAEA,OAAO,UAAUC,cAAV,CAAyB;AAACC,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAAzB,EAAkD;AACvD,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMV,IAAI,CAACI,GAAG,CAACO,IAAJ,CAASC,8BAAV,EAA0CL,KAA1C,EAAiDC,QAAjD,CAAvB;AACAH,IAAAA,QAAQ,CAACE,KAAD,EAAQE,IAAR,CAAR;AACA,UAAMI,WAAW,GAAGd,QAAQ,CAACY,IAAT,GAAgBE,WAApC;AACAA,IAAAA,WAAW,CAACC,aAAZ,CAA0B;AACxBC,MAAAA,WAAW,EAAEN;AADW,KAA1B,EAEGO,IAFH,CAEQ,YAAW,CAClB,CAHD,EAGGC,KAHH,CAGS,UAASC,KAAT,EAAgB,CACxB,CAJD;AAOD,GAXD,CAYA,OAAMA,KAAN,EAAa;AACX,UAAMjB,GAAG,CAACE,aAAa,CAACe,KAAD,CAAd,CAAT;AACD;AACF","sourcesContent":["import firebase from 'firebase'\nimport { call, put } from 'redux-saga/effects'\nimport { signupSuccess, signupFailure } from '../../actions/autorisation/SignUp'\nimport rsf from '../../../rsf/rsf'\nimport { userName } from '../../actions/user/Username'\n\nexport function* createUserSaga({email, password, name}) {\n  try {\n    const user = yield call(rsf.auth.createUserWithEmailAndPassword, email, password);\n    userName(email, name);\n    const currentUser = firebase.auth().currentUser;\n    currentUser.updateProfile({\n      displayName: name,\n    }).then(function() {\n    }).catch(function(error) {\n    });\n\n\n  }\n  catch(error) {\n    yield put(signupFailure(error));\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
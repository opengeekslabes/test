{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Daniil\\\\\\u0422\\u0415\\u0421\\u0422\\u041E\\u0412\\u041E\\u0415\\\\test_app\\\\src\\\\components\\\\profile crud\\\\DragAndDrop.js\";\nimport React from 'react';\nimport '../profile crud/Profile.css';\nimport { DragAndDropReducer } from '../../redux/reducers/draganddrop/DragAndDrop';\nimport { dropDepth, inDropZone, files } from '../../redux/actions/draganddrop/DragAndDrop';\nimport { connect } from 'react-redux';\n\nconst DragAndDrop = props => {\n  const handleDragEnter = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    props.dropDepth(1);\n  };\n\n  const handleDragLeave = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    props.dropDepth(-1);\n    if (props.data.dropDepth > 0) return;\n    props.inDropZone(false);\n  };\n\n  const handleDragOver = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.dataTransfer.dropEffect = 'copy';\n    props.inDropZone(true);\n  };\n\n  const handleDrop = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    let files = [...e.dataTransfer.files];\n\n    if (files && files.length > 0) {\n      const existingFiles = props.data.fileList.map(f => f.name);\n      files = files.filter(f => !existingFiles.includes(f.name));\n      props.files(files);\n      e.dataTransfer.clearData();\n      props.dropDepth(0);\n      props.inDropZone(false);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: props.data.inDropZone ? 'drag-drop-zone inside-drag-area col-3 p-0' : 'drag-drop-zone col-3 p-0',\n    onDrop: e => handleDrop(e),\n    onDragOver: e => handleDragOver(e),\n    onDragEnter: e => handleDragEnter(e),\n    onDragLeave: e => handleDragLeave(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"+\"));\n};\n\nconst mapStateToProps = state => {\n  return {\n    fileList: state.DragAndDropReducer,\n    data: state.DragAndDropReducer\n  };\n};\n\nconst mapDispatchToProps = {\n  dropDepth,\n  inDropZone,\n  files\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(DragAndDrop);","map":{"version":3,"sources":["C:/Users/Daniil/ТЕСТОВОЕ/test_app/src/components/profile crud/DragAndDrop.js"],"names":["React","DragAndDropReducer","dropDepth","inDropZone","files","connect","DragAndDrop","props","handleDragEnter","e","preventDefault","stopPropagation","handleDragLeave","data","handleDragOver","dataTransfer","dropEffect","handleDrop","length","existingFiles","fileList","map","f","name","filter","includes","clearData","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../profile crud/Profile.css'\nimport { DragAndDropReducer } from '../../redux/reducers/draganddrop/DragAndDrop'\nimport { dropDepth, inDropZone, files } from '../../redux/actions/draganddrop/DragAndDrop'\nimport { connect } from 'react-redux';\n\nconst DragAndDrop = props => {\n  const handleDragEnter = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    props.dropDepth(1)\n  };\n  const handleDragLeave = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    props.dropDepth(-1)\n    \n    if (props.data.dropDepth > 0) return\n    props.inDropZone(false) \n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    e.dataTransfer.dropEffect = 'copy';\n    props.inDropZone(true);\n  };\n  const handleDrop = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    let files = [...e.dataTransfer.files];\n  \n    if (files && files.length > 0) {\n      const existingFiles = props.data.fileList.map(f => f.name)\n      files = files.filter(f => !existingFiles.includes(f.name))\n      \n      props.files(files);\n      e.dataTransfer.clearData();\n      props.dropDepth(0)\n      props.inDropZone(false) \n    }\n  };\n  return (\n    <div className={props.data.inDropZone ? 'drag-drop-zone inside-drag-area col-3 p-0' : 'drag-drop-zone col-3 p-0'}\n      onDrop={e => handleDrop(e)}\n      onDragOver={e => handleDragOver(e)}\n      onDragEnter={e => handleDragEnter(e)}\n      onDragLeave={e => handleDragLeave(e)}\n    >\n      <span>+</span>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    fileList: state.DragAndDropReducer,\n    data: state.DragAndDropReducer\n\n  };\n};\n\nconst mapDispatchToProps = {\n  dropDepth,\n  inDropZone,\n  files\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DragAndDrop)\n\n\n"]},"metadata":{},"sourceType":"module"}
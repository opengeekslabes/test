{"ast":null,"code":"import { call, put } from 'redux-saga/effects';\nimport { loginSuccess, loginFailure } from '../../actions/autorisation/Login';\nimport { types } from '../../actions/autorisation/Types';\nimport { typesUser } from '../../actions/user/Username';\nimport rsf from '../../../rsf/rsf';\nimport firebase from 'firebase';\nimport { database } from '../../../rsf/rsf';\nexport function* createPostSaga({\n  email,\n  postDate,\n  postHeadline,\n  postText,\n  postTime\n}) {\n  //  yield put({type: types.LOGIN.REQUEST})\n  try {\n    console.log('IM TRYING');\n    firebase.database().ref('users/' + email).set({\n      username: 'YASSS'\n    });\n  } //    yield put(loginSuccess(user));\n  catch (error) {\n    console.log('NONONO');\n    const userRef = database.ref(`${email}`);\n    userRef.child().set({\n      postDate: postDate,\n      postHeadline: postHeadline,\n      postText: postText,\n      postTime: postTime\n    }); //    yield put(loginFailure(error));\n  }\n} //      postDate: postDate,\n//      postHeadline: postHeadline,\n//      postText: postText,\n//      postTime: postTime","map":{"version":3,"sources":["C:/Users/Daniil/ТЕСТОВОЕ/test_app/src/redux/sagas/posts/posts.js"],"names":["call","put","loginSuccess","loginFailure","types","typesUser","rsf","firebase","database","createPostSaga","email","postDate","postHeadline","postText","postTime","console","log","ref","set","username","error","userRef","child"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,kCAA3C;AACA,SAASC,KAAT,QAAsB,kCAAtB;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,OAAO,UAAUC,cAAV,CAAyB;AAACC,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA,YAAlB;AAAgCC,EAAAA,QAAhC;AAA0CC,EAAAA;AAA1C,CAAzB,EAA8E;AACrF;AACE,MAAI;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACET,IAAAA,QAAQ,CAACC,QAAT,GAAoBS,GAApB,CAAwB,WAAWP,KAAnC,EAA0CQ,GAA1C,CAA8C;AAC5CC,MAAAA,QAAQ,EAAE;AADkC,KAA9C;AAGD,GALH,CAMF;AAEE,SAAMC,KAAN,EAAa;AACXL,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,UAAMK,OAAO,GAAGb,QAAQ,CAACS,GAAT,CAAc,GAAEP,KAAM,EAAtB,CAAhB;AACAW,IAAAA,OAAO,CAACC,KAAR,GAAgBJ,GAAhB,CAAoB;AAClBP,MAAAA,QAAQ,EAAEA,QADQ;AAElBC,MAAAA,YAAY,EAAEA,YAFI;AAGlBC,MAAAA,QAAQ,EAAEA,QAHQ;AAIlBC,MAAAA,QAAQ,EAAEA;AAJQ,KAApB,EAHW,CASf;AACG;AACF,C,CAED;AACA;AACA;AACA","sourcesContent":["import { call, put } from 'redux-saga/effects'\nimport { loginSuccess, loginFailure } from '../../actions/autorisation/Login'\nimport { types } from '../../actions/autorisation/Types'\nimport { typesUser } from '../../actions/user/Username'\nimport rsf from '../../../rsf/rsf'\nimport firebase from 'firebase'\nimport { database } from '../../../rsf/rsf'\n\nexport function* createPostSaga({email, postDate, postHeadline, postText, postTime}) {\n//  yield put({type: types.LOGIN.REQUEST})\n  try {\n    console.log('IM TRYING')\n      firebase.database().ref('users/' + email).set({\n        username: 'YASSS'\n      });\n    }\n//    yield put(loginSuccess(user));\n  \n  catch(error) {\n    console.log('NONONO')\n    const userRef = database.ref(`${email}`);\n    userRef.child().set({\n      postDate: postDate,\n      postHeadline: postHeadline,\n      postText: postText,\n      postTime: postTime\n    });\n//    yield put(loginFailure(error));\n  }\n}\n\n//      postDate: postDate,\n//      postHeadline: postHeadline,\n//      postText: postText,\n//      postTime: postTime"]},"metadata":{},"sourceType":"module"}
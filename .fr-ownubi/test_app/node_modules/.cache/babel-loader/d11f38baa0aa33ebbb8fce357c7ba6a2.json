{"ast":null,"code":"import { call, put } from 'redux-saga/effects';\nimport { loginSuccess, loginFailure } from '../../actions/autorisation/Login';\nimport { types } from '../../actions/autorisation/Types';\nimport { typesUser } from '../../actions/user/Username';\nimport rsf from '../../../rsf/rsf';\nimport firebase from 'firebase';\nimport { database } from '../../../rsf/rsf';\nimport { postGetSuccess } from '../../actions/posts/posts';\nexport function* createPostSaga({\n  email,\n  postHeadline,\n  postText\n}) {\n  //  yield put({type: types.LOGIN.REQUEST})\n  try {\n    console.log('IM TRYING', email);\n    const path = email.split('').filter(item => item !== '.').join('');\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    const date = new Date();\n    const postDate = `${months[date.getMonth()]} ${date.getDate()}`;\n    const postTime = `${date.getHours()}:${date.getMinutes()}`;\n    firebase.database().ref(`users/${path}`).child('posts').push({\n      postDate: postDate,\n      postHeadline: postHeadline,\n      postText: postText,\n      postTime: postTime\n    });\n  } //    yield put(loginSuccess(user));\n  catch (error) {\n    console.log('NONONO'); //    yield put(loginFailure(error));\n  }\n}\nexport function* getPostsSaga() {\n  const posts = yield call(rsf.database.read, 'users');\n  console.log(posts); //  yield put(postGetSuccess(post));\n}","map":{"version":3,"sources":["C:/Users/Daniil/ТЕСТОВОЕ/test_app/src/redux/sagas/posts/posts.js"],"names":["call","put","loginSuccess","loginFailure","types","typesUser","rsf","firebase","database","postGetSuccess","createPostSaga","email","postHeadline","postText","console","log","path","split","filter","item","join","months","date","Date","postDate","getMonth","getDate","postTime","getHours","getMinutes","ref","child","push","error","getPostsSaga","posts","read"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,kCAA3C;AACA,SAASC,KAAT,QAAsB,kCAAtB;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,cAAT,QAA+B,2BAA/B;AAEA,OAAO,UAAUC,cAAV,CAAyB;AAACC,EAAAA,KAAD;AAAQC,EAAAA,YAAR;AAAsBC,EAAAA;AAAtB,CAAzB,EAA0D;AACjE;AACE,MAAI;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,KAAzB;AACE,UAAMK,IAAI,GAAGL,KAAK,CAACM,KAAN,CAAY,EAAZ,EAAgBC,MAAhB,CAAuBC,IAAI,IAAIA,IAAI,KAAK,GAAxC,EAA6CC,IAA7C,CAAkD,EAAlD,CAAb;AACA,UAAMC,MAAM,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EAAmG,UAAnG,EAA+G,UAA/G,CAAf;AACA,UAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,UAAMC,QAAQ,GAAI,GAAEH,MAAM,CAACC,IAAI,CAACG,QAAL,EAAD,CAAkB,IAAGH,IAAI,CAACI,OAAL,EAAe,EAA9D;AACA,UAAMC,QAAQ,GAAI,GAAEL,IAAI,CAACM,QAAL,EAAgB,IAAGN,IAAI,CAACO,UAAL,EAAkB,EAAzD;AAEAtB,IAAAA,QAAQ,CAACC,QAAT,GAAoBsB,GAApB,CAAyB,SAAQd,IAAK,EAAtC,EAAyCe,KAAzC,CAA+C,OAA/C,EAAwDC,IAAxD,CAA6D;AAC3DR,MAAAA,QAAQ,EAAEA,QADiD;AAE3DZ,MAAAA,YAAY,EAAEA,YAF6C;AAG3DC,MAAAA,QAAQ,EAAEA,QAHiD;AAI3Dc,MAAAA,QAAQ,EAAEA;AAJiD,KAA7D;AAMD,GAdH,CAeF;AAEE,SAAMM,KAAN,EAAa;AACXnB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EADW,CAEf;AACG;AACF;AAED,OAAO,UAAUmB,YAAV,GAAyB;AAC9B,QAAMC,KAAK,GAAG,MAAMnC,IAAI,CAACM,GAAG,CAACE,QAAJ,CAAa4B,IAAd,EAAoB,OAApB,CAAxB;AACAtB,EAAAA,OAAO,CAACC,GAAR,CAAYoB,KAAZ,EAF8B,CAGhC;AACC","sourcesContent":["import { call, put } from 'redux-saga/effects'\nimport { loginSuccess, loginFailure } from '../../actions/autorisation/Login'\nimport { types } from '../../actions/autorisation/Types'\nimport { typesUser } from '../../actions/user/Username'\nimport rsf from '../../../rsf/rsf'\nimport firebase from 'firebase'\nimport { database } from '../../../rsf/rsf'\nimport { postGetSuccess } from '../../actions/posts/posts'\n\nexport function* createPostSaga({email, postHeadline, postText}) {\n//  yield put({type: types.LOGIN.REQUEST})\n  try {\n    console.log('IM TRYING', email)\n      const path = email.split('').filter(item => item !== '.').join('');\n      const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']   \n      const date = new Date();\n      const postDate = `${months[date.getMonth()]} ${date.getDate()}`;\n      const postTime = `${date.getHours()}:${date.getMinutes()}`\n      \n      firebase.database().ref(`users/${path}`).child('posts').push({\n        postDate: postDate,\n        postHeadline: postHeadline,\n        postText: postText,\n        postTime: postTime\n      });\n    }\n//    yield put(loginSuccess(user));\n  \n  catch(error) {\n    console.log('NONONO')\n//    yield put(loginFailure(error));\n  }\n}\n\nexport function* getPostsSaga() {\n  const posts = yield call(rsf.database.read, 'users');\n  console.log(posts)\n//  yield put(postGetSuccess(post));\n}\n"]},"metadata":{},"sourceType":"module"}
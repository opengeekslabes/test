{"ast":null,"code":"import firebase from 'firebase';\nimport { call, put } from 'redux-saga/effects';\nimport { signupSuccess, signupFailure } from '../../actions/autorisation/SignUp';\nimport rsf from '../../../rsf/rsf';\nimport { typesUser } from '../../actions/user/Username';\nexport function* createUserSaga({\n  email,\n  password,\n  name\n}) {\n  try {\n    const user = yield call(rsf.auth.createUserWithEmailAndPassword, email, password);\n    const currentUser = firebase.auth().currentUser;\n    currentUser.updateProfile({\n      displayName: name\n    }).then(function () {}).catch(function (error) {\n      console.log(error.message);\n    });\n    yield put(signupSuccess(name, email));\n  } catch (error) {\n    yield put(signupFailure(error));\n  }\n}\nexport function* addUser({\n  email\n}) {\n  try {\n    const key = yield call(rsf.database.create, 'users/', {\n      email: email\n    });\n  } catch (error) {\n    yield put(signupFailure(error));\n  }\n}\n;","map":{"version":3,"sources":["C:/Users/Daniil/ТЕСТОВОЕ/test_app/src/redux/sagas/autorisation/SignUp.js"],"names":["firebase","call","put","signupSuccess","signupFailure","rsf","typesUser","createUserSaga","email","password","name","user","auth","createUserWithEmailAndPassword","currentUser","updateProfile","displayName","then","catch","error","console","log","message","addUser","key","database","create"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,oBAA1B;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,mCAA7C;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,SAASC,SAAT,QAA0B,6BAA1B;AAEA,OAAO,UAAUC,cAAV,CAAyB;AAACC,EAAAA,KAAD;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAAzB,EAAkD;AACvD,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMV,IAAI,CAACI,GAAG,CAACO,IAAJ,CAASC,8BAAV,EAA0CL,KAA1C,EAAiDC,QAAjD,CAAvB;AAEA,UAAMK,WAAW,GAAGd,QAAQ,CAACY,IAAT,GAAgBE,WAApC;AACAA,IAAAA,WAAW,CAACC,aAAZ,CAA0B;AACxBC,MAAAA,WAAW,EAAEN;AADW,KAA1B,EAEGO,IAFH,CAEQ,YAAW,CAClB,CAHD,EAGGC,KAHH,CAGS,UAASC,KAAT,EAAgB;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD,KALD;AAMA,UAAMpB,GAAG,CAACC,aAAa,CAACO,IAAD,EAAOF,KAAP,CAAd,CAAT;AAED,GAZD,CAaA,OAAMW,KAAN,EAAa;AACX,UAAMjB,GAAG,CAACE,aAAa,CAACe,KAAD,CAAd,CAAT;AACD;AACF;AACD,OAAO,UAAUI,OAAV,CAAkB;AAACf,EAAAA;AAAD,CAAlB,EAA2B;AAChC,MAAI;AACF,UAAMgB,GAAG,GAAG,MAAMvB,IAAI,CAACI,GAAG,CAACoB,QAAJ,CAAaC,MAAd,EAAsB,QAAtB,EAAgC;AACpDlB,MAAAA,KAAK,EAAEA;AAD6C,KAAhC,CAAtB;AAGD,GAJD,CAKA,OAAMW,KAAN,EAAa;AACX,UAAMjB,GAAG,CAACE,aAAa,CAACe,KAAD,CAAd,CAAT;AACD;AACF;AAAA","sourcesContent":["import firebase from 'firebase'\nimport { call, put } from 'redux-saga/effects'\nimport { signupSuccess, signupFailure } from '../../actions/autorisation/SignUp'\nimport rsf from '../../../rsf/rsf'\nimport { typesUser } from '../../actions/user/Username'\n\nexport function* createUserSaga({email, password, name}) {\n  try {\n    const user = yield call(rsf.auth.createUserWithEmailAndPassword, email, password);\n\n    const currentUser = firebase.auth().currentUser;\n    currentUser.updateProfile({\n      displayName: name,\n    }).then(function() {\n    }).catch(function(error) {\n      console.log(error.message)\n    });\n    yield put(signupSuccess(name, email));\n\n  }\n  catch(error) {\n    yield put(signupFailure(error));\n  }\n}\nexport function* addUser({email}) {\n  try {\n    const key = yield call(rsf.database.create, 'users/', {\n      email: email,\n    })\n  }\n  catch(error) {\n    yield put(signupFailure(error));\n  }\n};\n"]},"metadata":{},"sourceType":"module"}